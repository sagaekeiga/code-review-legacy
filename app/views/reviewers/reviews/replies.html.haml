.container-fluid
  .row
    .review
      .left-sidebar.col-sm-2.hidden-xs
        = render 'left_sidebar', pull: @pull
      .col-sm-10.col-sm-offset-2.p-l-0
        = render 'right_sidebar'
        .col-sm-8.col-sm-offset-2.p-l-0.conversation-wrapper
          .page-header{ 'pull-id': @pull.id }
            %h1
              %strong= @pull.title
          - @reviews.includes(:reviewer).each do |review|
            - if review.comment?
              -# 全体へのレビューコメント
              .review-wrapper
                = render review
            - if review.issue_comment?
              -# コメント
              .issue-comment-wrapper
                = render 'issue_comment', review: review
            - review.review_comments.reviewed.each do |review_comment|
              %li.step
                %i.fas.fa-check-circle
                %span.path= review_comment.path
                .comment-line
                  .panel
                    .panel-body
                      .code-wrapper
                        %table
                          %thead
                            %tr
                              %th{ scope: 'col' }
                          - review_comment.target_lines.each_with_index do |line, index|
                            %tbody
                              %tr
                                %td.hidden= index
                                - if line.start_with?('+')
                                  %td.markdown-highlight.bg-success.file-code= review_comment.changed_file.decorate.coderay(line)
                                - elsif line.start_with?('-')
                                  %td.markdown-highlight.bg-danger.file-code= review_comment.changed_file.decorate.coderay(line)
                                - elsif line.start_with?('@@')
                                  %td.markdown-highlight.bg-primary.file-code= simple_format(line)
                                - else
                                  %td.markdown-highlight.file-code= review_comment.changed_file.decorate.coderay(line)
                      .panel-text
                        = render review_comment.target_comments.includes(:reviewer)
                    .panel-footer
                      .text-right
                        .menu.code-button
                          %i.fas.fa-code
                        .menu.thread-button
                          %i.far.fa-comments
                    
                    // Reply
                    .replies-wrapper.hidden
                      .panel
                        .panel-body
                          - review.review_comments.reviewed.each do |review_comment|
                            .panel-text
                              .image
                                = image_tag review_comment.reviewer.github_account.avatar_url, class: 'img-responsive img-circle'
                              .nickname
                                = review_comment.reviewer.github_account.nickname
                              .date
                                .text-muted= date_format(review_comment.updated_at)
                              .replies-line{ class: review_comment.eql?(review.review_comments.reviewed.last) ? 'last' : '' }
                                .body
                                  = markdown(review_comment.body)
                        .panel-footer
                          %input{ type: 'text', class: 'form-control' }
          .bottom-line
            -# = render 'reviewers/reviews/tab_contents', pull: @pull, commits: @commits
= javascript_pack_tag 'review-tab'
= javascript_pack_tag 'reply'
