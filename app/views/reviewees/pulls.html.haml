.col-xs-12
  .container
    .page-header
      %h3
        %b Pullrequests
    = render 'error_messages', resource: @pull if @pull
    - if @pulls.blank?
      = t '.empty'
      = link_to t('.set_pulls'), ENV['GITHUB_APP_URL'], target: '_blank'
      = link_to t('reviewees.views.configure_github_app'), Settings.qiita.about_install_github_app, target: '_blank'
    - else
      .reviewee-pulls-index-wrapper
        %table.table.table-hover
          %thead
            %tr
              %th= t 'activerecord.models.pull'
              %th= t 'activerecord.models.repo'
              %th= t 'activerecord.models.repo.private'
              %th= t 'activerecord.attributes.pull.status'
          %tbody
            - @pulls.each do |pull|
              %tr
                %td= link_to pull.title&.truncate(40), pull.decorate.remote_url, target: 'blank'
                %td.text-center= link_to pull.repo_full_name, pull.repo.decorate.remote_url, target: 'blank'
                %td.text-center= pull.repo.private?
                %td.text-center
                  - if pull.connected? || pull.canceled?
                    = link_to t('views.status.request_reviewed'), reviewees_pull_path(pull.id, status: :request_reviewed), method: :put
                  - elsif pull.completed?
                    = I18n.t('views.status.complete')
                  - else
                    = link_to t('views.status.pending'), reviewees_pull_path(pull.id, status: :canceled), data: { confirm: t('views.status.confirm_canceled') }, method: :put
        .text-center= paginate @pulls
